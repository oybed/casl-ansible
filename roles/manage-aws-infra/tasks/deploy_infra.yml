# Tasks to deploy AWS infra based in the requested intance numbers
---

- name: "Create the instance tags for Master / etcd"
  set_fact:
    master_tags:
      user: "{{ user_tag }}"
      role: "{{ role_tag }}"
      group: "{{ group_masters_tag }}"
      node_labels: "{{ labels_master_tag }}"
      ocp_role: "{{ master_tag }} {{ etcd_tag }}"
      env_id: "{{ env_id }}"

- name: "Append the dynamic cluster tag"
  set_fact:
    master_tags: "{{ master_tags|combine({'kubernetes.io/cluster/cluster-' + env_id: env_id}) }}"

- name: Create Master and etcd instances
  ec2:
    image: "{{ aws_image_name }}"
    instance_type: "{{ master_flavor | default('m4.xlarge') }}"
    group: "{{ aws_master_sgroups }}"
    termination_protection: "{{ instances_termination_protection }}"
    key_name: "{{ aws_key_name }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ aws_subnet }}"
    exact_count: 1
    wait: yes
    count_tag:
      Name: "{{ env_id }}-ocp-master-{{ item }}"
    instance_tags: "{{ master_tags|combine({'Name': env_id + '-ocp-master-' + item }) }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ master_root_volume_size | default('50') }}"
        tags:
          user: "{{ user_tag }}"
          role: "{{ role_tag }}"
          env_id: "{{ env_id }}"
      - device_name: "{{ docker_storage_block_device }}"
        volume_type: gp2
        volume_size: "{{ docker_volume_size | default('40') }}"
        tags:
          user: "{{ user_tag }}"
          role: "{{ role_tag }}"
          env_id: "{{ env_id }}"
  with_sequence:
    count="{{ aws_num_masters }}"
  register: instances_master_etcd

- name: "Create the instance tags for Infra"
  set_fact:
    infra_tags:
      user: "{{ user_tag }}"
      role: "{{ role_tag }}"
      group: "{{ group_infra_tag }}"
      node_labels: "{{ labels_infra_tag }}"
      ocp_role: "{{ infranode_tag }}"
      env_id: "{{ env_id }}"

- name: "Append the dynamic cluster tag"
  set_fact:
    infra_tags: "{{ infra_tags|combine({'kubernetes.io/cluster/cluster-' + env_id: env_id}) }}"

- name: Create Infra instances
  ec2:
    image: "{{ aws_image_name }}"
    instance_type: "{{ infra_flavor | default('i3.xlarge') }}"
    group: "{{ aws_infra_sgroups }}"
    termination_protection: "{{ instances_termination_protection }}"
    key_name: "{{ aws_key_name }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ aws_subnet }}"
    exact_count: 1
    wait: yes
    count_tag:
      Name: "{{ env_id }}-ocp-infra-{{ item }}"
    instance_tags: "{{ infra_tags|combine({'Name': env_id + '-ocp-infra-' + item }) }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ infra_root_volume_size | default('50') }}"
        tags:
          user: "{{ user_tag }}"
          role: "{{ role_tag }}"
          env_id: "{{ env_id }}"
      - device_name: "{{ docker_storage_block_device }}"
        volume_type: gp2
        volume_size: "{{ docker_volume_size | default('40') }}"
        tags:
          user: "{{ user_tag }}"
          role: "{{ role_tag }}"
          env_id: "{{ env_id }}"
  with_sequence:
    count="{{ aws_num_infra }}"
  register: instances_infra

- name: "Create the instance tags for Compute"
  set_fact:
    compute_tags:
      user: "{{ user_tag }}"
      role: "{{ role_tag }}"
      group: "{{ group_compute_tag }}"
      node_labels: "{{ labels_compute_tag }}"
      ocp_role: "{{ computenode_tag }}"
      env_id: "{{ env_id }}"

- name: "Append the dynamic cluster tag"
  set_fact:
    compute_tags: "{{ compute_tags|combine({'kubernetes.io/cluster/cluster-' + env_id: env_id}) }}"

- name: Create Compute instances
  ec2:
    image: "{{ aws_image_name }}"
    instance_type: "{{ node_flavor | default('m4.xlarge') }}"
    group: "{{ aws_node_sgroups }}"
    termination_protection: "{{ instances_termination_protection }}"
    key_name: "{{ aws_key_name }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    vpc_subnet_id: "{{ aws_subnet }}"
    exact_count: 1
    wait: yes
    count_tag:
      Name: "{{ env_id }}-ocp-node-{{ item }}"
    instance_tags: "{{ compute_tags|combine({'Name': env_id + '-ocp-node-' + item }) }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ node_root_volume_size | default('50') }}"
        tags:
          user: "{{ user_tag }}"
          role: "{{ role_tag }}"
          env_id: "{{ env_id }}"
      - device_name: "{{ docker_storage_block_device }}"
        volume_type: gp2
        volume_size: "{{ docker_volume_size | default('40') }}"
        tags:
          user: "{{ user_tag }}"
          role: "{{ role_tag }}"
          env_id: "{{ env_id }}"
  with_sequence:
    count="{{ aws_num_nodes }}"
  register: instances_compute

- name: Create elastic IP for Master Node (Non HA Mode)
  ec2_eip:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    in_vpc: yes
    state: present
    release_on_disassociation: yes
    device_id: "{{ instances_master_etcd.results[0].instances[0].id }}"
  when: not ha_mode
  register: master_eip

- name: Create elastic IP for Infra Node (Non HA Mode)
  ec2_eip:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ aws_region }}"
    in_vpc: yes
    state: present
    release_on_disassociation: yes
    device_id: "{{ instances_infra.results[0].instances[0].id }}"
  when: not ha_mode
  register: infra_eip
