---
- name: Create Azure deploy
  azure_rm_deployment:
    state: present
    resource_group_name: "{{ resource_group }}"
    location: "{{ azure_region }}"
    template:
      "$schema": http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json
      contentVersion: 1.0.0.0
      parameters:
        _artifactsLocation:
          type: string
          metadata:
            description: Base URL for Template Files
            artifactsBaseUrl: ''
          defaultValue: https://raw.githubusercontent.com/redhat-cop/casl-ansible/azure/roles/manage-azure-infra/files
        masterVmSize:
          type: string
          defaultValue: Standard_DS2_v2
          allowedValues:
          - Standard_A4
          - Standard_A5
          - Standard_A6
          - Standard_A7
          - Standard_A8
          - Standard_A9
          - Standard_A10
          - Standard_A11
          - Standard_D2
          - Standard_D3
          - Standard_D4
          - Standard_D11
          - Standard_D12
          - Standard_D13
          - Standard_D14
          - Standard_D2_v2
          - Standard_D3_v2
          - Standard_D4_v2
          - Standard_D5_v2
          - Standard_D11_v2
          - Standard_D12_v2
          - Standard_D13_v2
          - Standard_D14_v2
          - Standard_G1
          - Standard_G2
          - Standard_G3
          - Standard_G4
          - Standard_G5
          - Standard_DS2
          - Standard_DS3
          - Standard_DS4
          - Standard_DS11
          - Standard_DS12
          - Standard_DS13
          - Standard_DS14
          - Standard_DS2_v2
          - Standard_DS3_v2
          - Standard_DS4_v2
          - Standard_DS5_v2
          - Standard_DS11_v2
          - Standard_DS12_v2
          - Standard_DS13_v2
          - Standard_DS14_v2
          - Standard_GS1
          - Standard_GS2
          - Standard_GS3
          - Standard_GS4
          - Standard_GS5
          - Standard_D2_v3
          - Standard_D4_v3
          - Standard_D8_v3
          - Standard_D16_v3
          - Standard_D32_v3
          - Standard_D64_v3
          - Standard_D2s_v3
          - Standard_D4s_v3
          - Standard_D8s_v3
          - Standard_D16s_v3
          - Standard_D32s_v3
          - Standard_D64s_v3
          - Standard_E2_v3
          - Standard_E4_v3
          - Standard_E8_v3
          - Standard_E16_v3
          - Standard_E32_v3
          - Standard_E64_v3
          - Standard_E2s_v3
          - Standard_E4s_v3
          - Standard_E8s_v3
          - Standard_E16s_v3
          - Standard_E32s_v3
          - Standard_E64s_v3
          metadata:
            description: OpenShift Master VM size
        infraVmSize:
          type: string
          defaultValue: Standard_DS2_v2
          allowedValues:
          - Standard_A4
          - Standard_A5
          - Standard_A6
          - Standard_A7
          - Standard_A8
          - Standard_A9
          - Standard_A10
          - Standard_A11
          - Standard_D2
          - Standard_D3
          - Standard_D4
          - Standard_D11
          - Standard_D12
          - Standard_D13
          - Standard_D14
          - Standard_D2_v2
          - Standard_D3_v2
          - Standard_D4_v2
          - Standard_D5_v2
          - Standard_D11_v2
          - Standard_D12_v2
          - Standard_D13_v2
          - Standard_D14_v2
          - Standard_G1
          - Standard_G2
          - Standard_G3
          - Standard_G4
          - Standard_G5
          - Standard_DS2
          - Standard_DS3
          - Standard_DS4
          - Standard_DS11
          - Standard_DS12
          - Standard_DS13
          - Standard_DS14
          - Standard_DS2_v2
          - Standard_DS3_v2
          - Standard_DS4_v2
          - Standard_DS5_v2
          - Standard_DS11_v2
          - Standard_DS12_v2
          - Standard_DS13_v2
          - Standard_DS14_v2
          - Standard_GS1
          - Standard_GS2
          - Standard_GS3
          - Standard_GS4
          - Standard_GS5
          - Standard_D2_v3
          - Standard_D4_v3
          - Standard_D8_v3
          - Standard_D16_v3
          - Standard_D32_v3
          - Standard_D64_v3
          - Standard_D2s_v3
          - Standard_D4s_v3
          - Standard_D8s_v3
          - Standard_D16s_v3
          - Standard_D32s_v3
          - Standard_D64s_v3
          - Standard_E2_v3
          - Standard_E4_v3
          - Standard_E8_v3
          - Standard_E16_v3
          - Standard_E32_v3
          - Standard_E64_v3
          - Standard_E2s_v3
          - Standard_E4s_v3
          - Standard_E8s_v3
          - Standard_E16s_v3
          - Standard_E32s_v3
          - Standard_E64s_v3
          metadata:
            description: OpenShift Infra Node VM(s) size
        nodeVmSize:
          type: string
          defaultValue: Standard_DS2_v2
          allowedValues:
          - Standard_A4
          - Standard_A5
          - Standard_A6
          - Standard_A7
          - Standard_A8
          - Standard_A9
          - Standard_A10
          - Standard_A11
          - Standard_D2
          - Standard_D3
          - Standard_D4
          - Standard_D11
          - Standard_D12
          - Standard_D13
          - Standard_D14
          - Standard_D2_v2
          - Standard_D3_v2
          - Standard_D4_v2
          - Standard_D5_v2
          - Standard_D11_v2
          - Standard_D12_v2
          - Standard_D13_v2
          - Standard_D14_v2
          - Standard_G1
          - Standard_G2
          - Standard_G3
          - Standard_G4
          - Standard_G5
          - Standard_DS2
          - Standard_DS3
          - Standard_DS4
          - Standard_DS11
          - Standard_DS12
          - Standard_DS13
          - Standard_DS14
          - Standard_DS2_v2
          - Standard_DS3_v2
          - Standard_DS4_v2
          - Standard_DS5_v2
          - Standard_DS11_v2
          - Standard_DS12_v2
          - Standard_DS13_v2
          - Standard_DS14_v2
          - Standard_GS1
          - Standard_GS2
          - Standard_GS3
          - Standard_GS4
          - Standard_GS5
          - Standard_D2_v3
          - Standard_D4_v3
          - Standard_D8_v3
          - Standard_D16_v3
          - Standard_D32_v3
          - Standard_D64_v3
          - Standard_D2s_v3
          - Standard_D4s_v3
          - Standard_D8s_v3
          - Standard_D16s_v3
          - Standard_D32s_v3
          - Standard_D64s_v3
          - Standard_E2_v3
          - Standard_E4_v3
          - Standard_E8_v3
          - Standard_E16_v3
          - Standard_E32_v3
          - Standard_E64_v3
          - Standard_E2s_v3
          - Standard_E4s_v3
          - Standard_E8s_v3
          - Standard_E16s_v3
          - Standard_E32s_v3
          - Standard_E64s_v3
          metadata:
            description: OpenShift Node VM(s) size
        storageKind:
          type: string
          defaultValue: managed
          allowedValues:
          - managed
          - unmanaged
          metadata:
            description: Use Managed or Unmanaged Disks
        labelsMasters:
          type: string
          minLength: 1
          metadata:
            description: OpenShift Master Node Labels
        labelsInfraNodes:
          type: string
          minLength: 1
          metadata:
            description: OpenShift Infra Node Labels
        labelsAppNodes:
          type: string
          minLength: 1
          metadata:
            description: OpenShift App Node Labels
        openshiftClusterPrefix:
          type: string
          defaultValue: mycluster
          minLength: 4
          maxLength: 20
          metadata:
            description: OpenShift cluster prefix.  Used to generate master, infra and node
              hostnames.  Maximum of 20 characters.
        masterInstanceCount:
          type: int
          defaultValue: 1
          allowedValues:
          - 1
          - 3
          - 5
          metadata:
            description: Number of OpenShift masters.
        infraInstanceCount:
          type: int
          defaultValue: 1
          allowedValues:
          - 1
          - 2
          - 3
          metadata:
            description: Number of OpenShift infra nodes.  1 is non HA.  Choose 2 or 3 for
              HA
        nodeInstanceCount:
          type: int
          defaultValue: 2
          allowedValues:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
          - 18
          - 19
          - 20
          - 21
          - 22
          - 23
          - 24
          - 25
          - 26
          - 27
          - 28
          - 29
          - 30
          metadata:
            description: Number of OpenShift nodes
        dataDiskSize:
          type: int
          defaultValue: 64
          allowedValues:
          - 32
          - 64
          - 128
          - 256
          - 512
          - 1024
          - 2048
          metadata:
            description: Size of Datadisk in GB for Docker volume
        adminUsername:
          type: string
          defaultValue: ocpadmin
          minLength: 1
          metadata:
            description: Administrator username on all VMs and first user created for OpenShift
              login
        sshPublicKey:
          type: string
          metadata:
            description: SSH public key for all VMs
        keyVaultResourceGroup:
          type: string
          minLength: 1
          metadata:
            description: Resource Group that contains the Key Vault
        keyVaultName:
          type: string
          minLength: 1
          metadata:
            description: Name of the Key Vault
        keyVaultSecret:
          type: string
          minLength: 1
          metadata:
            description: Key Vault Secret Name that contains the Private Key
      variables:
        location: "[resourceGroup().location]"
        resourceGroupName: "[resourceGroup().id]"
        apiVersionCompute: '2017-03-30'
        apiVersionNetwork: '2017-09-01'
        apiVersionStorage: '2017-06-01'
        apiVersionLinkTemplate: '2015-01-01'
        namingInfix: "[toLower(parameters('openshiftClusterPrefix'))]"
        openshiftMasterHostname: "[concat(variables('namingInfix'), '-master')]"
        openshiftNodeHostname: "[concat(variables('namingInfix'), '-node')]"
        openshiftInfraHostname: "[concat(variables('namingInfix'), '-infra')]"
        newStorageAccountMaster: "[concat('master', uniqueString(concat(resourceGroup().id,
          'msa')))]"
        newStorageAccountInfra: "[concat('infra', uniqueString(concat(resourceGroup().id,
          'isa')))]"
        newStorageAccountNodeOs: "[concat('nodeos', uniqueString(concat(resourceGroup().id,
          'nodeossa')))]"
        newStorageAccountNodeData: "[concat('nodedata', uniqueString(concat(resourceGroup().id,
          'nodedatasa')))]"
        diagStorageAccount1: "[concat('diag1', uniqueString(concat(resourceGroup().id, 'dsa1')))]"
        diagStorageAccount2: "[concat('diag2', uniqueString(concat(resourceGroup().id, 'dsa2')))]"
        newStorageAccountRegistry: "[concat('registry', uniqueString(concat(resourceGroup().id,
          'registry')))]"
        newStorageAccountPersistentVolume1: "[concat('pv1sa', uniqueString(concat(resourceGroup().id,
          'persistentvolume1')))]"
        newStorageAccountArray:
        - name: "[variables('diagStorageAccount1')]"
          tagName: DiagnosticsStorageAccount
          skuName: "[variables('storageSkuObject').diagnostics.skuName]"
          skuTier: "[variables('storageSkuObject').diagnostics.skuTier]"
        - name: "[variables('diagStorageAccount2')]"
          tagName: DiagnosticsStorageAccount
          skuName: "[variables('storageSkuObject').diagnostics.skuName]"
          skuTier: "[variables('storageSkuObject').diagnostics.skuTier]"
        - name: "[variables('newStorageAccountRegistry')]"
          tagName: RegistryStorageAccount
          skuName: "[variables('storageSkuObject').registry.skuName]"
          skuTier: "[variables('storageSkuObject').registry.skuTier]"
        - name: "[variables('newStorageAccountMaster')]"
          tagName: MasterStorageAccount
          skuName: "[variables('storageSkuObject').master.skuName]"
          skuTier: "[variables('storageSkuObject').master.skuTier]"
        - name: "[variables('newStorageAccountInfra')]"
          tagName: InfraStorageAccount
          skuName: "[variables('storageSkuObject').infra.skuName]"
          skuTier: "[variables('storageSkuObject').infra.skuTier]"
        - name: "[variables('newStorageAccountNodeOs')]"
          tagName: NodeStorageAccount
          skuName: "[variables('storageSkuObject').node.skuName]"
          skuTier: "[variables('storageSkuObject').node.skuTier]"
        - name: "[variables('newStorageAccountNodeData')]"
          tagName: NodeStorageAccount
          skuName: "[variables('storageSkuObject').node.skuName]"
          skuTier: "[variables('storageSkuObject').node.skuTier]"
        - name: "[variables('newStorageAccountPersistentVolume1')]"
          tagName: PersistentVolume1StorageAccount
          skuName: "[variables('storageSkuObject').persistent.skuName]"
          skuTier: "[variables('storageSkuObject').persistent.skuTier]"
        availabilitySetArray:
        - name: masteravailabilityset
          tagName: MasterAvailabilitySet
        - name: infraavailabilityset
          tagName: InfraAvailabilitySet
        - name: nodeavailabilityset
          tagName: NodeAvailabilitySet
        unmanagedAvailabilitySetSku: Classic
        managedAvailabilitySetSku: Aligned
        availabilitySetSku: "[concat(parameters('storageKind'), 'AvailabilitySetSku')]"
        unmanagedPlatformFaultDomainCount: 3
        managedPlatformFaultDomainCount: 2
        platformFaultDomainCount: "[concat(parameters('storageKind'), 'PlatformFaultDomainCount')]"
        storageSkuObject:
          master:
            skuName: "[variables('vmSizesMap')[parameters('masterVmSize')].storageAccountType]"
            skuTier: "[variables('vmSizesMap')[parameters('masterVmSize')].storageAccountTier]"
          infra:
            skuName: "[variables('vmSizesMap')[parameters('infraVmSize')].storageAccountType]"
            skuTier: "[variables('vmSizesMap')[parameters('infraVmSize')].storageAccountTier]"
          node:
            skuName: "[variables('vmSizesMap')[parameters('nodeVmSize')].storageAccountType]"
            skuTier: "[variables('vmSizesMap')[parameters('nodeVmSize')].storageAccountTier]"
          diagnostics:
            skuName: Standard_LRS
            skuTier: Standard
          registry:
            skuName: Standard_LRS
            skuTier: Standard
          persistent:
            skuName: Standard_LRS
            skuTier: Standard
        managedStorageCount: 3
        unmanagedStorageCount: "[length(variables('newStorageAccountArray'))]"
        storageLoopCount: "[concat(parameters('storageKind'), 'StorageCount')]"
        unmanagedMasterUri: "[variables('newStorageAccountMaster')]"
        managedMasterUri: "[variables('diagStorageAccount1')]"
        unmanagedInfraUri: "[variables('newStorageAccountInfra')]"
        managedInfraUri: "[variables('diagStorageAccount1')]"
        unmanagedNodeOsUri: "[variables('newStorageAccountNodeOs')]"
        managedNodeOsUri: "[variables('diagStorageAccount1')]"
        unmanagedNodeDataUri: "[variables('newStorageAccountNodeData')]"
        managedNodeDataUri: "[variables('diagStorageAccount1')]"
        masterUri: "[concat(parameters('storageKind'), 'MasterUri')]"
        infraUri: "[concat(parameters('storageKind'), 'InfraUri')]"
        nodeOsUri: "[concat(parameters('storageKind'), 'NodeOsUri')]"
        nodeDataUri: "[concat(parameters('storageKind'), 'NodeDataUri')]"
        addressPrefix: 10.0.0.0/8
        masterSubnetPrefix: 10.1.0.0/16
        nodeSubnetPrefix: 10.2.0.0/16
        virtualNetworkName: openshiftvnet
        masterSubnetName: mastersubnet
        nodeSubnetName: nodesubnet
        infraPublicIpDnsLabel: "[concat('infradns', uniqueString(concat(resourceGroup().id,
          'infra')))]"
        openshiftMasterPublicIpDnsLabel: "[concat('masterdns', uniqueString(concat(resourceGroup().id,
          'master')))]"
        nodePublicIpDnsLabel: "[concat('nodedns', uniqueString(concat(resourceGroup().id,
          'node')))]"
        persistentVolume1Type: Standard_LRS
        imageReference:
          publisher: RedHat
          offer: RHEL
          sku: 7-RAW
          version: latest
        redHatTags:
          app: OpenShift
          provider: 9d2c71fc-96ba-4b4a-93b3-14def5bc96fc
        singlequote: "'"
        sshKeyPath: "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
        clusterNodeDeploymentTemplateUrl: "[concat(parameters('_artifactsLocation'), '/galleryclusternode.json')]"
        vmSizesMap:
          Standard_A4:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_A5:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_A6:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_A7:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_A8:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_A9:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_A10:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_A11:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D1:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D4:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D11:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D12:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D13:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D14:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D1_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D2_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D3_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D4_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D5_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D11_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D12_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D13_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D14_v2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_G1:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_G2:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_G3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_G4:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_G5:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_DS1:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS4:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS11:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS12:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS13:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS14:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS1_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS2_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS3_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS4_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS5_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS11_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS12_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS13_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS14_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_DS15_v2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_GS1:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_GS2:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_GS3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_GS4:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_GS5:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_D2_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D4_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D8_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D16_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D32_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D64_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_D2s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_D4s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_D8s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_D16s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_D32s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_D64s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_E2_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_E4_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_E8_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_E16_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_E32_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_E64_v3:
            storageAccountType: Standard_LRS
            storageAccountTier: Standard
          Standard_E2s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_E4s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_E8s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_E16s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_E32s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
          Standard_E64s_v3:
            storageAccountType: Premium_LRS
            storageAccountTier: Premium
      resources:
      - apiVersion: "[variables('apiVersionNetwork')]"
        type: Microsoft.Network/networkSecurityGroups
        name: "[concat(variables('openshiftMasterHostname'), '-nsg')]"
        location: "[variables('location')]"
        tags:
          displayName: MasterNSG
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        properties:
          securityRules:
          - name: allowSSHin_all
            properties:
              description: Allow SSH in from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '22'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 100
              direction: Inbound
          - name: allowHTTPS_all
            properties:
              description: Allow HTTPS connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '443'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 200
              direction: Inbound
          - name: allowOpenShiftConsoleIn_all
            properties:
              description: Allow OpenShift Console connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '8443'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 300
              direction: Inbound
          - name: allowCockpitIn_all
            properties:
              description: Allow Cockpit connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '9090'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 400
              direction: Inbound
      - apiVersion: "[variables('apiVersionNetwork')]"
        type: Microsoft.Network/networkSecurityGroups
        name: "[concat(variables('openshiftInfraHostname'), '-nsg')]"
        location: "[variables('location')]"
        tags:
          displayName: InfraNSG
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        properties:
          securityRules:
          - name: allowSSHin_all
            properties:
              description: Allow SSH in from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '22'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 100
              direction: Inbound
          - name: allowHTTPSIn_all
            properties:
              description: Allow HTTPS connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '443'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 200
              direction: Inbound
          - name: allowHTTPIn_all
            properties:
              description: Allow HTTP connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '80'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 300
              direction: Inbound
          - name: allowCockpitIn_all
            properties:
              description: Allow Cockpit connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '9090'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 400
              direction: Inbound
      - apiVersion: "[variables('apiVersionNetwork')]"
        type: Microsoft.Network/networkSecurityGroups
        name: "[concat(variables('openshiftNodeHostname'), '-nsg')]"
        location: "[variables('location')]"
        tags:
          displayName: NodeNSG
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        properties:
          securityRules:
          - name: allowSSHin_all
            properties:
              description: Allow SSH in from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '22'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 100
              direction: Inbound
          - name: allowHTTPS_all
            properties:
              description: Allow HTTPS connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '443'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 200
              direction: Inbound
          - name: allowHTTPIn_all
            properties:
              description: Allow HTTP connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '80'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 300
              direction: Inbound
          - name: allowCockpitIn_all
            properties:
              description: Allow Cockpit connections from all locations
              protocol: Tcp
              sourcePortRange: "*"
              destinationPortRange: '9090'
              sourceAddressPrefix: "*"
              destinationAddressPrefix: "*"
              access: Allow
              priority: 400
              direction: Inbound
      - type: Microsoft.Network/virtualNetworks
        name: "[variables('virtualNetworkName')]"
        location: "[variables('location')]"
        tags:
          displayName: VirtualNetwork
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        apiVersion: "[variables('apiVersionNetwork')]"
        properties:
          addressSpace:
            addressPrefixes:
            - "[variables('addressPrefix')]"
          subnets:
          - name: "[variables('masterSubnetName')]"
            properties:
              addressPrefix: "[variables('masterSubnetPrefix')]"
          - name: "[variables('nodeSubnetName')]"
            properties:
              addressPrefix: "[variables('nodeSubnetPrefix')]"
      - type: Microsoft.Storage/storageAccounts
        name: "[variables('newStorageAccountArray')[copyIndex()].name]"
        location: "[variables('location')]"
        kind: Storage
        apiVersion: "[variables('apiVersionStorage')]"
        tags:
          displayName: "[variables('newStorageAccountArray')[copyIndex()].tagName]"
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        copy:
          name: storageLoop
          count: "[variables(variables('storageLoopCount'))]"
        sku:
          name: "[variables('newStorageAccountArray')[copyIndex()].skuName]"
          tier: "[variables('newStorageAccountArray')[copyIndex()].skuTier]"
      - type: Microsoft.Network/publicIPAddresses
        name: "[concat(variables('infraPublicIpDnsLabel'),copyIndex())]"
        location: "[variables('location')]"
        apiVersion: "[variables('apiVersionNetwork')]"
        tags:
          displayName: OpenShiftInfraPublicIP
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        copy:
          name: "infraPublicIpCopy"
          count: "[parameters('infraInstanceCount')]"
        properties:
          publicIPAllocationMethod: Static
          dnsSettings:
            domainNameLabel: "[concat(variables('infraPublicIpDnsLabel'),copyIndex())]"
      - type: Microsoft.Network/publicIPAddresses
        name: "[concat(variables('openshiftMasterPublicIpDnsLabel'),copyIndex())]"
        location: "[variables('location')]"
        apiVersion: "[variables('apiVersionNetwork')]"
        tags:
          displayName: OpenShiftMasterPublicIP
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        copy:
          name: "masterPublicIpCopy"
          count: "[parameters('masterInstanceCount')]"
        properties:
          publicIPAllocationMethod: Static
          dnsSettings:
            domainNameLabel: "[concat(variables('openshiftMasterPublicIpDnsLabel'),copyIndex())]"
      - type: Microsoft.Network/publicIPAddresses
        name: "[concat(variables('nodePublicIpDnsLabel'),copyIndex())]"
        location: "[variables('location')]"
        apiVersion: "[variables('apiVersionNetwork')]"
        tags:
          displayName: NodePublicIP
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        copy:
          name: "nodePublicIpCopy"
          count: "[parameters('nodeInstanceCount')]"
        properties:
          publicIPAllocationMethod: Static
          dnsSettings:
            domainNameLabel: "[concat(variables('nodePublicIpDnsLabel'),copyIndex())]"
      - type: Microsoft.Compute/availabilitySets
        name: "[variables('availabilitySetArray')[copyIndex()].name]"
        location: "[variables('location')]"
        apiVersion: "[variables('apiVersionCompute')]"
        sku:
          name: "[variables(variables('availabilitySetSku'))]"
        properties:
          platformFaultDomainCount: "[variables(variables('platformFaultDomainCount'))]"
          platformUpdateDomainCount: '5'
        tags:
          displayName: "[variables('availabilitySetArray')[copyIndex()].tagName]"
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        copy:
          name: availabiltySetLoop
          count: "[length(variables('availabilitySetArray'))]"
      - type: Microsoft.Network/networkInterfaces
        name: "[concat(variables('openshiftMasterHostname'), '-', copyIndex(), '-nic')]"
        location: "[variables('location')]"
        apiVersion: "[variables('apiVersionNetwork')]"
        tags:
          displayName: OpenShiftMasterNetworkInterface
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        dependsOn:
        - "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        - "[concat('Microsoft.Network/networkSecurityGroups/', variables('openshiftMasterHostname'),
          '-nsg')]"
        - "[concat('Microsoft.Network/publicIPAddresses/', variables('openshiftMasterPublicIpDnsLabel'), copyIndex())]"
        copy:
          name: masterNicLoop
          count: "[parameters('masterInstanceCount')]"
        properties:
          ipConfigurations:
          - name: "[concat(variables('openshiftMasterHostname'), copyIndex(), 'ipconfig')]"
            properties:
              privateIPAllocationMethod: Dynamic
              subnet:
                id: "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',
                  resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/',
                  variables('virtualNetworkName'), '/subnets/', variables('masterSubnetName'))]"
              publicIPAddress:
                id: "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('openshiftMasterPublicIpDnsLabel'),copyIndex()))]"
          networkSecurityGroup:
            id: "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('openshiftMasterHostname'),
              '-nsg'))]"
      - type: Microsoft.Network/networkInterfaces
        name: "[concat(variables('openshiftInfraHostname'), '-', copyIndex(), '-nic')]"
        location: "[variables('location')]"
        apiVersion: "[variables('apiVersionNetwork')]"
        tags:
          displayName: OpenShiftInfraNetworkInterfaces
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        dependsOn:
        - "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        - "[concat('Microsoft.Network/networkSecurityGroups/', variables('openshiftInfraHostname'),
          '-nsg')]"
        - "[concat('Microsoft.Network/publicIPAddresses/', variables('infraPublicIpDnsLabel'), copyIndex())]"
        copy:
          name: infraNicLoop
          count: "[parameters('infraInstanceCount')]"
        properties:
          ipConfigurations:
          - name: "[concat(variables('openshiftInfraHostname'), copyIndex(), 'ipconfig')]"
            properties:
              privateIPAllocationMethod: Dynamic
              subnet:
                id: "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',
                  resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/',
                  variables('virtualNetworkName'), '/subnets/', variables('masterSubnetName'))]"
              publicIPAddress:
                id: "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('infraPublicIpDnsLabel'),copyIndex()))]"
          networkSecurityGroup:
            id: "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('openshiftInfraHostname'),
              '-nsg'))]"
      - type: Microsoft.Network/networkInterfaces
        name: "[concat(variables('openshiftNodeHostname'), '-', copyIndex(), '-nic')]"
        location: "[variables('location')]"
        apiVersion: "[variables('apiVersionNetwork')]"
        tags:
          displayName: OpenShiftNodeNetworkInterfaces
          provider: "[variables('redHatTags').provider]"
          app: "[variables('redHatTags').app]"
        dependsOn:
        - "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        - "[concat('Microsoft.Network/networkSecurityGroups/', variables('openshiftNodeHostname'),
          '-nsg')]"
        - "[concat('Microsoft.Network/publicIPAddresses/', variables('nodePublicIpDnsLabel'), copyIndex())]"
        copy:
          name: nodeNicLoop
          count: "[parameters('nodeInstanceCount')]"
        properties:
          ipConfigurations:
          - name: "[concat(variables('openshiftNodeHostname'), copyIndex(), 'ipconfig')]"
            properties:
              privateIPAllocationMethod: Dynamic
              subnet:
                id: "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',
                  resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/',
                  variables('virtualNetworkName'), '/subnets/', variables('nodeSubnetName'))]"
              publicIPAddress:
                id: "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('nodePublicIpDnsLabel'),copyIndex()))]"
          networkSecurityGroup:
            id: "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('openshiftNodeHostname'),
              '-nsg'))]"
      - name: "[concat('masterVmDeployment', copyindex())]"
        type: Microsoft.Resources/deployments
        apiVersion: "[variables('apiVersionLinkTemplate')]"
        dependsOn:
        - "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount1'))]"
        - masterNicLoop
        - masteravailabilityset
        copy:
          name: masterVmLoop
          count: "[parameters('masterInstanceCount')]"
        properties:
          mode: Incremental
          templateLink:
            uri: "[variables('clusterNodeDeploymentTemplateUrl')]"
            contentVersion: 1.0.0.0
          parameters:
            location:
              value: "[variables('location')]"
            sshKeyPath:
              value: "[variables('sshKeyPath')]"
            sshPublicKey:
              value: "[parameters('sshPublicKey')]"
            dataDiskSize:
              value: "[parameters('dataDiskSize')]"
            adminUsername:
              value: "[parameters('adminUsername')]"
            vmSize:
              value: "[parameters('masterVmSize')]"
            availabilitySet:
              value: masteravailabilityset
            hostName:
              value: "[concat(variables('openshiftMasterHostname'), '-', copyIndex())]"
            unmanagedOsDiskUri:
              value: "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts',
                variables(variables('masterUri'))), variables('apiVersionStorage')).primaryEndpoints['blob']]"
            unmanagedDataDiskUri:
              value: "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts',
                variables(variables('masterUri'))), variables('apiVersionStorage')).primaryEndpoints['blob']]"
            role:
              value: masternode
            vmStorageType:
              value: "[variables('vmSizesMap')[parameters('masterVmSize')].storageAccountType]"
            storageKind:
              value: "[parameters('storageKind')]"
            newStorageAccountOs:
              value: "[variables('newStorageAccountMaster')]"
            newStorageAccountData:
              value: "[variables('newStorageAccountMaster')]"
            diagStorageAccount:
              value: "[variables('diagStorageAccount1')]"
            apiVersionStorage:
              value: "[variables('apiVersionStorage')]"
            apiVersionCompute:
              value: "[variables('apiVersionCompute')]"
            imageReference:
              value: "[variables('imageReference')]"
            redHatTags:
              value: "[variables('redHatTags')]"
            nodelabels:
              value: "[parameters('labelsMasters')]"
      - name: "[concat('infraVmDeployment', copyindex())]"
        type: Microsoft.Resources/deployments
        apiVersion: "[variables('apiVersionLinkTemplate')]"
        dependsOn:
        - "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount1'))]"
        - infraNicLoop
        - infraavailabilityset
        copy:
          name: infraVmLoop
          count: "[parameters('infraInstanceCount')]"
        properties:
          mode: Incremental
          templateLink:
            uri: "[variables('clusterNodeDeploymentTemplateUrl')]"
            contentVersion: 1.0.0.0
          parameters:
            location:
              value: "[variables('location')]"
            sshKeyPath:
              value: "[variables('sshKeyPath')]"
            sshPublicKey:
              value: "[parameters('sshPublicKey')]"
            dataDiskSize:
              value: "[parameters('dataDiskSize')]"
            adminUsername:
              value: "[parameters('adminUsername')]"
            vmSize:
              value: "[parameters('infraVmSize')]"
            availabilitySet:
              value: infraavailabilityset
            hostName:
              value: "[concat(variables('openshiftInfraHostname'), '-', copyIndex())]"
            unmanagedOsDiskUri:
              value: "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts',
                variables(variables('infraUri'))), variables('apiVersionStorage')).primaryEndpoints['blob']]"
            unmanagedDataDiskUri:
              value: "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts',
                variables(variables('infraUri'))), variables('apiVersionStorage')).primaryEndpoints['blob']]"
            role:
              value: infranode
            vmStorageType:
              value: "[variables('vmSizesMap')[parameters('infraVmSize')].storageAccountType]"
            storageKind:
              value: "[parameters('storageKind')]"
            newStorageAccountOs:
              value: "[variables('newStorageAccountInfra')]"
            newStorageAccountData:
              value: "[variables('newStorageAccountInfra')]"
            diagStorageAccount:
              value: "[variables('diagStorageAccount1')]"
            apiVersionStorage:
              value: "[variables('apiVersionStorage')]"
            apiVersionCompute:
              value: "[variables('apiVersionCompute')]"
            imageReference:
              value: "[variables('imageReference')]"
            redHatTags:
              value: "[variables('redHatTags')]"
            nodelabels:
              value: "[parameters('labelsInfraNodes')]"
      - name: "[concat('nodeVmDeployment', copyindex())]"
        type: Microsoft.Resources/deployments
        apiVersion: "[variables('apiVersionLinkTemplate')]"
        dependsOn:
        - "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount2'))]"
        - nodeNicLoop
        - nodeavailabilityset
        copy:
          name: nodeVmLoop
          count: "[parameters('nodeInstanceCount')]"
        properties:
          mode: Incremental
          templateLink:
            uri: "[variables('clusterNodeDeploymentTemplateUrl')]"
            contentVersion: 1.0.0.0
          parameters:
            location:
              value: "[variables('location')]"
            sshKeyPath:
              value: "[variables('sshKeyPath')]"
            sshPublicKey:
              value: "[parameters('sshPublicKey')]"
            dataDiskSize:
              value: "[parameters('dataDiskSize')]"
            adminUsername:
              value: "[parameters('adminUsername')]"
            vmSize:
              value: "[parameters('nodeVmSize')]"
            availabilitySet:
              value: nodeavailabilityset
            hostName:
              value: "[concat(variables('openshiftNodeHostname'), '-', copyIndex())]"
            unmanagedOsDiskUri:
              value: "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts',
                variables(variables('nodeOsUri'))), variables('apiVersionStorage')).primaryEndpoints['blob']]"
            unmanagedDataDiskUri:
              value: "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts',
                variables(variables('nodeDataUri'))), variables('apiVersionStorage')).primaryEndpoints['blob']]"
            role:
              value: appnode
            vmStorageType:
              value: "[variables('vmSizesMap')[parameters('nodeVmSize')].storageAccountType]"
            storageKind:
              value: "[parameters('storageKind')]"
            newStorageAccountOs:
              value: "[variables('newStorageAccountNodeOs')]"
            newStorageAccountData:
              value: "[variables('newStorageAccountNodeData')]"
            diagStorageAccount:
              value: "[variables('diagStorageAccount2')]"
            apiVersionStorage:
              value: "[variables('apiVersionStorage')]"
            apiVersionCompute:
              value: "[variables('apiVersionCompute')]"
            imageReference:
              value: "[variables('imageReference')]"
            redHatTags:
              value: "[variables('redHatTags')]"
            nodelabels:
              value: "[parameters('labelsAppNodes')]"

    parameters:
      masterVmSize:
        value: "{{ master_flavor }}"
      labelsMasters:
        value: "{{ labels_masters_tag | string }}"
      infraVmSize:
        value: "{{ infra_node_flavor }}"
      labelsInfraNodes:
        value: "{{ labels_infra_nodes_tag | string }}"
      nodeVmSize:
        value: "{{ app_node_flavor }}"
      labelsAppNodes:
        value: "{{ labels_app_nodes_tag | string }}"
      storageKind:
        value: "{{ storageKind }}"
      openshiftClusterPrefix:
        value: "{{ openshiftClusterPrefix }}"
      masterInstanceCount:
        value: "{{ number_of_masters }}"
      infraInstanceCount:
        value: "{{ number_of_infra_nodes }}"
      nodeInstanceCount:
        value: "{{ number_of_app_nodes }}"
      dataDiskSize:
        value: "{{ dataDiskSize }}"
      adminUsername:
        value: "{{ adminUsername }}"
      keyVaultResourceGroup:
        value: "{{ keyVaultResourceGroup }}"
      keyVaultName:
        value: "{{ keyVaultName }}"
      keyVaultSecret:
        value: "{{ keyVaultSecret }}"
      sshPublicKey:
        value: "{{ ssh_key }}"
